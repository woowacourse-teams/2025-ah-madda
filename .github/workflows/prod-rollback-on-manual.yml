name: Prod Rollback On Manual

on:
  workflow_dispatch:
    inputs:
      rollback_tag:
        description: '이미지 태그 (미입력 시 최신 이전 태그로 롤백)'
        required: false
        type: string

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      second-latest-tag: ${{ steps.get-tag.outputs.rollback_tag }}
    steps:
      - name: Get second latest tag from private Docker Hub
        id: get-tag
        run: |
          TOKEN=$(curl -s -H "Content-Type: application/json" \
            -X POST -d '{"username": "${{ secrets.PROD_DOCKERHUB_DEPLOY_USERNAME }}", "password": "${{ secrets.PROD_DOCKERHUB_DEPLOY_TOKEN }}"}' \
            https://hub.docker.com/v2/users/login/ | jq -r .token)

          TAG=$(curl -s -H "Authorization: Bearer $TOKEN" \
            "https://hub.docker.com/v2/repositories/amadda/ahmadda_server/tags?page_size=2&ordering=last_updated" \
            | jq -r '.results[1].name')

          echo "rollback_tag=$TAG" >> $GITHUB_OUTPUT

  rollback:
    needs: setup
    runs-on:
      - self-hosted
      - prod
    steps:
      - name: Determine rollback tag
        run: |
          TAG="${{ github.event.inputs.rollback_tag }}"
          if [ -z "$TAG" ]; then
            TAG="${{ needs.setup.outputs.second-latest-tag }}"
          fi
          echo "TAG=$TAG" >> $GITHUB_ENV

      - name: Log in to Docker Hub
        run: |
          sudo docker login -u ${{ secrets.PROD_DOCKERHUB_DEPLOY_USERNAME }} \
                            -p ${{ secrets.PROD_DOCKERHUB_DEPLOY_TOKEN }}

      - name: Stop and remove existing container
        run: |
          if sudo docker inspect ahmadda-prod-server &>/dev/null; then
            sudo docker stop ahmadda-prod-server || true
            sudo docker rm -f ahmadda-prod-server || true
          fi
          sudo docker image prune -af || true

      - name: Pull rollback image
        run: |
          sudo docker pull amadda/ahmadda_server:$TAG

      - name: Run rollback container
        run: |
          sudo docker run -v /home/ubuntu/app/logs:/app/logs \
            --name ahmadda-prod-server \
            --restart unless-stopped \
            -p 80:8080 \
            -e PROFILE=prod \
            -d amadda/ahmadda_server:$TAG
