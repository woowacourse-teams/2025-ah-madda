name: BE Prod Deploy On Release

on:
  release:
    types: [published]

permissions: write-all

jobs:
  setup:
    runs-on: ubuntu-22.04-arm

    outputs:
      image-tag: ${{ steps.calc.outputs.version }}
      docker-tag: ${{ steps.calc.outputs.docker_version }}

    steps:
      - name: Checkout (for tagging)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fetch and determine base version
        id: base
        run: |
          git fetch --tags

          base_tag=$(git tag -l 'v*.*.*' | grep -v '+be' | sort -V | tail -n 1)
          base_version="${base_tag#v}"

          head=$(echo "$base_version" | cut -d'.' -f1)
          yearweek=$(echo "$base_version" | cut -d'.' -f2)
          common_build=$(echo "$base_version" | cut -d'.' -f3)

          echo "head=$head" >> $GITHUB_OUTPUT
          echo "yearweek=$yearweek" >> $GITHUB_OUTPUT
          echo "common_build=$common_build" >> $GITHUB_OUTPUT

      - name: Calculate next BE build version
        id: calc
        run: |
          git fetch --tags

          head="${{ steps.base.outputs.head }}"
          yearweek="${{ steps.base.outputs.yearweek }}"
          common="${{ steps.base.outputs.common_build }}"
          prefix="v${head}.${yearweek}.${common}+be"

          matching_tags=$(git tag -l "${prefix}.*")
          if [[ -z "$matching_tags" ]]; then
            next_be_build=1
          else
            last_be_build=$(echo "$matching_tags" | sed -E 's/.*\+be\.([0-9]+)/\1/' | sort -n | tail -n 1)
            next_be_build=$((last_be_build + 1))
          fi

          version="${prefix}.${next_be_build}"
          echo "version=$version" >> $GITHUB_OUTPUT

          docker_version=$(echo "$version" | sed -E 's/\+be\././')
          echo "docker_version=$docker_version" >> $GITHUB_OUTPUT

          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag "$version"
          git push origin "$version"

      - name: Checkout with submodules
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive
          token: ${{ secrets.BE_SUBMODULE_TOKEN }}

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      - name: Run tests
        working-directory: ./server
        run: |
          chmod +x ./gradlew
          ./gradlew test

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.PROD_DOCKERHUB_DEPLOY_USERNAME }}
          password: ${{ secrets.PROD_DOCKERHUB_DEPLOY_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./server
          file: ./server/Dockerfile
          push: true
          tags: amadda/ahmadda_server:${{ steps.calc.outputs.docker_version }}

  deploy:
    needs: setup
    runs-on:
      - self-hosted
      - prod

    steps:
      - name: Set tag name from setup output
        run: echo "TAG=${{ needs.setup.outputs.docker-tag }}" >> $GITHUB_ENV

      - name: Log in to Docker Hub
        run: |
          sudo docker login \
            --username ${{ secrets.PROD_DOCKERHUB_DEPLOY_USERNAME }} \
            --password ${{ secrets.PROD_DOCKERHUB_DEPLOY_TOKEN }}

      - name: Stop existing container and pull latest image
        run: |
          if sudo docker inspect ahmadda-prod-server &>/dev/null; then
            sudo docker stop ahmadda-prod-server || true
            sudo docker rm -f ahmadda-prod-server || true
            sudo docker image prune -af || true
          fi
          sudo docker pull amadda/ahmadda_server:$TAG

      - name: Run container
        run: |
          sudo docker run -v /home/ubuntu/app/logs:/app/logs \
            --name ahmadda-prod-server \
            --restart unless-stopped \
            -p 80:8080 \
            -e PROFILE=prod \
            -d amadda/ahmadda_server:$TAG
