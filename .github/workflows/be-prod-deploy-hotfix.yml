name: BE Prod Deploy On Hotfix

on:
  push:
    branches:
      - main
    paths:
      - 'server/**'

permissions: write-all

jobs:
  setup:
    if: startsWith(github.event.head_commit.message, 'hotfix')
    runs-on: ubuntu-22.04-arm

    outputs:
      s3_key: ah-madda/codedeploy/ahmadda-server-prod-${{ steps.calc.outputs.version }}.zip

    steps:
      - name: Checkout (for tagging)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Fetch latest be tag
        id: latest
        run: |
          git fetch --tags

          latest_be_tag=$(git tag -l 'v*.*.*+be.*' | sort -V | tail -n 1)
          base=$(echo "$latest_be_tag" | sed -E 's/^v([0-9]+\.[0-9]+\.[0-9]+)\+be\..*/\1/')

          head=$(echo "$base" | cut -d'.' -f1)
          yearweek=$(echo "$base" | cut -d'.' -f2)
          common_build=$(echo "$base" | cut -d'.' -f3)

          echo "head=$head" >> $GITHUB_OUTPUT
          echo "yearweek=$yearweek" >> $GITHUB_OUTPUT
          echo "common_build=$common_build" >> $GITHUB_OUTPUT

      - name: Calculate next BE build version
        id: calc
        run: |
          git fetch --tags

          head="${{ steps.latest.outputs.head }}"
          yearweek="${{ steps.latest.outputs.yearweek }}"
          common="${{ steps.latest.outputs.common_build }}"
          prefix="v${head}.${yearweek}.${common}+be"

          matching_tags=$(git tag -l "${prefix}.*")
          if [[ -z "$matching_tags" ]]; then
            next_be_build=1
          else
            last_be_build=$(echo "$matching_tags" | sed -E 's/.*\+be\.([0-9]+)/\1/' | sort -n | tail -n 1)
            next_be_build=$((last_be_build + 1))
          fi

          version="${prefix}.${next_be_build}" 
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Create and push Git tag
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          tag="${{ steps.calc.outputs.version }}"
          git tag "$tag"
          git push origin "$tag"

      - name: Checkout with submodules
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive
          token: ${{ secrets.BE_SUBMODULE_TOKEN }}

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      - name: Build with Gradle
        working-directory: ./server
        run: |
          chmod +x ./gradlew
          ./gradlew build -x test

      - name: Create deployment package
        run: |
          mkdir deploy
          cp server/build/libs/*[!plain].jar deploy/ahmadda-server-prod.jar
          cp codedeploy/be/appspec.yml deploy/
          cp -r codedeploy/be/scripts/ deploy/
          cd deploy
          tar -czf ahmadda-server-prod-${{ steps.calc.outputs.version }}.tar.gz -C deploy .
          cd ..

      - name: Upload to S3
        run: |
          aws s3 cp \
            ahmadda-server-prod-${{ steps.calc.outputs.version }}.tar.gz \
            s3://techcourse-project-2025/ah-madda/codedeploy/ahmadda-server-prod-${{ steps.calc.outputs.version }}.tar.gz

  deploy:
    needs: setup
    runs-on:
      - self-hosted
      - prod

    steps:
      - name: Start AWS CodeDeploy deployment
        run: |
          aws deploy create-deployment \
            --application-name ahmadda-code-deploy-ec2 \
            --deployment-group-name ahmadda-code-deploy-alb \
            --s3-location bucket=techcourse-project-2025,key=${{ needs.build.outputs.s3_key }},bundleType=tar \
            --description "prod deployment ${{ steps.calc.outputs.version }} deployed via GitHub Actions"
