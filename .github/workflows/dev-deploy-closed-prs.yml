on:
  pull_request:
    branches:
      - be/dev
    types:
      - opened
      - synchronize
      - reopened
jobs:
  deploy:
    runs-on: ubuntu-latest
    outputs:
      image-tag: ${{ steps.set-tag.outputs.image-tag }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
          token: ${{ secrets.BE_SUBMODULE_TOKEN }}
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21
      - name: Set image tag based on date and run number
        id: set-tag
        run: echo "image-tag=$(date +'%Y-%m-%d')-${{ github.run_number }}" >> $GITHUB_OUTPUT
      - name: Run tests and build
        working-directory: ./server
        run: |
          chmod +x ./gradlew
          ./gradlew clean build
      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DEV_DOCKERHUB_DEPLOY_USERNAME }}
          password: ${{ secrets.DEV_DOCKERHUB_DEPLOY_TOKEN }}
      - name: Build Docker image for API server
        working-directory: ./server
        run: |
          docker build -t ahmadda1234/ahmadda_server:${{ steps.set-tag.outputs.image-tag }} -f ./Dockerfile .
      - name: Push Docker image to Docker Hub
        run: |
          docker push ahmadda1234/ahmadda_server:${{ steps.set-tag.outputs.image-tag }}
  cd:
    needs: deploy
    runs-on: self-hosted
    steps:
      - name: Set tag name from deploy output
        run: echo "TAG=${{ needs.deploy.outputs.image-tag }}" >> $GITHUB_ENV
      - name: Log in to Docker Hub
        run: |
          sudo docker login --username ${{ secrets.DEV_DOCKERHUB_DEPLOY_USERNAME }} --password ${{ secrets.DEV_DOCKERHUB_DEPLOY_TOKEN }}
      - name: Stop existing container and pull latest image
        run: |
          if sudo docker inspect ahmadda-dev-server &>/dev/null; then
            sudo docker stop ahmadda-dev-server || true
            sudo docker rm -f ahmadda-dev-server || true
            sudo docker image prune -af || true
          fi
          sudo docker pull ahmadda1234/ahmadda_server:$TAG
      - name: Run container
        run: |
          sudo docker run --name ahmadda-dev-server \
            --restart unless-stopped \
            -p 8080:8080 \
            -e PROFILE=dev \
            -d ahmadda1234/ahmadda_server:$TAG
