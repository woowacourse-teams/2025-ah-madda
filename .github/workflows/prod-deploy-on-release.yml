name: Prod Deploy On Release

on:
  release:
    types: [published]

jobs:
  setup:
    runs-on: ubuntu-22.04-arm

    outputs:
      image-tag: ${{ steps.extract.outputs.version }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
          token: ${{ secrets.BE_SUBMODULE_TOKEN }}

      - name: Extract version from release tag
        id: extract
        run: |
          TAG_NAME="${GITHUB_REF#refs/tags/}" 
          echo "version=$TAG_NAME" >> $GITHUB_OUTPUT

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      - name: Run tests
        working-directory: ./server
        run: |
          chmod +x ./gradlew
          ./gradlew test

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.PROD_DOCKERHUB_DEPLOY_USERNAME }}
          password: ${{ secrets.PROD_DOCKERHUB_DEPLOY_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./server
          file: ./server/Dockerfile
          push: true
          tags: amadda/ahmadda_server:${{ steps.extract.outputs.version }}

  deploy:
    needs: setup
    runs-on: self-hosted

    steps:
      - name: Set tag name from setup output
        run: echo "TAG=${{ needs.setup.outputs.image-tag }}" >> $GITHUB_ENV

      - name: Log in to Docker Hub
        run: |
          sudo docker login --username ${{ secrets.PROD_DOCKERHUB_DEPLOY_USERNAME }} --password ${{ secrets.PROD_DOCKERHUB_DEPLOY_TOKEN }}

      - name: Stop existing container and pull latest image
        run: |
          if sudo docker inspect ahmadda-prod-server &>/dev/null; then
            sudo docker stop ahmadda-prod-server || true
            sudo docker rm -f ahmadda-prod-server || true
            sudo docker image prune -af || true
          fi
          sudo docker pull amadda/ahmadda_server:$TAG

      - name: Run container
        run: |
          sudo docker run --name ahmadda-prod-server \
            --restart unless-stopped \
            -p 80:8080 \
            -e PROFILE=prod \
            --log-driver=awslogs \
            --log-opt awslogs-group=/aws/ec2/ahmadda-prod-server \
            --log-opt awslogs-region=ap-northeast-2 \
            --log-opt awslogs-stream=logs \
            -d amadda/ahmadda_server:$TAG
